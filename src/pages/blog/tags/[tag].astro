---
import { getCollection } from "astro:content";
import BaseLayout from "../../../layouts/BaseLayout.astro";
import BlogPostCard from "../../../components/blog/BlogPostCard.astro";
import type { Crumb } from "../../../utils/types";

export async function getStaticPaths() {
    const allPosts = await getCollection("blog");

    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.data.tags).flat()),
    ];

    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) =>
            post.data.tags.includes(tag),
        );
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

const title = "ankt / blog / tags";
const current = "blog";
const breadcrumbs: Array<Crumb> = [
    { title: "BLOG", href: "/blog/" },
    { title: `TAG`, href: `/blog/tags/` },
];
---

<BaseLayout {title} {current} {breadcrumbs}>
    <div class="flex flex-col space-y-12">
        <h1
            class="text-LM-Text dark:text-DM-Text font-sans text-2xl uppercase tracking-[-0.015rem] font-medium"
        >
            Posts tagged with <em>{tag}</em>
        </h1>
        {
            posts
                .sort((a, b) => b.data.postOrder - a.data.postOrder) // sort such that newer posts on top
                .map((post) => <BlogPostCard blogPost={post} />)
        }
    </div>
</BaseLayout>
